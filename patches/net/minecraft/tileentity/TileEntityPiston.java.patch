--- a/net/minecraft/tileentity/TileEntityPiston.java
+++ b/net/minecraft/tileentity/TileEntityPiston.java
@@ -1,6 +1,8 @@
 package net.minecraft.tileentity;
 
 import java.util.List;
+
+import carpet.CarpetSettings;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockPistonBase;
 import net.minecraft.block.BlockPistonExtension;
@@ -40,6 +42,11 @@
     private float lastProgress;
     private long lastTicked;
 
+    //CM
+    @Override
+    public String cm_name() { return "Moving Piston"; }
+
+
     public TileEntityPiston()
     {
         super(TileEntityType.PISTON);
@@ -178,6 +185,13 @@
                             {
                                 this.fixEntityWithinPistonBase(entity, enumfacing, d0);
                             }
+
+                            // [CM] Added UnloadedEntityFix
+                            if (CarpetSettings.getBool("unloadedEntityFix"))
+                            {
+                                world.tickEntity(entity, false);
+                            }
+                            // [CM] End
                         }
                     }
                 }
@@ -375,7 +389,15 @@
         this.pistonState = NBTUtil.readBlockState(compound.getCompound("blockState"));
         this.pistonFacing = EnumFacing.byIndex(compound.getInt("facing"));
         this.progress = compound.getFloat("progress");
-        this.lastProgress = this.progress;
+        // [CM] Reload update order fix
+        if( CarpetSettings.b_reloadUpdateOrderFix && compound.hasKey("lastProgress"))
+        {
+            this.lastProgress = compound.getFloat("lastProgress");
+        }
+        else
+        {
+            this.lastProgress = this.progress;
+        }
         this.extending = compound.getBoolean("extending");
         this.shouldHeadBeRendered = compound.getBoolean("source");
     }
@@ -385,7 +407,16 @@
         super.write(compound);
         compound.setTag("blockState", NBTUtil.writeBlockState(this.pistonState));
         compound.setInt("facing", this.pistonFacing.getIndex());
-        compound.setFloat("progress", this.lastProgress);
+        // [CM] Reload update order fix
+        if (!CarpetSettings.b_reloadUpdateOrderFix)
+        {
+            compound.setFloat("progress", this.lastProgress);
+        }
+        else
+        {
+            compound.setFloat("progress", this.progress);
+            compound.setFloat("lastProgress", this.lastProgress);
+        }
         compound.setBoolean("extending", this.extending);
         compound.setBoolean("source", this.shouldHeadBeRendered);
         return compound;
