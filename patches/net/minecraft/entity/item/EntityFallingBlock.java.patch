--- a/net/minecraft/entity/item/EntityFallingBlock.java
+++ b/net/minecraft/entity/item/EntityFallingBlock.java
@@ -1,5 +1,8 @@
 package net.minecraft.entity.item;
 
+import carpet.CarpetSettings;
+import carpet.logging.LoggerRegistry;
+import carpet.logging.logHelpers.TrajectoryLogHelper;
 import com.google.common.collect.Lists;
 import java.util.List;
 import net.minecraft.block.Block;
@@ -44,6 +47,27 @@
     public NBTTagCompound tileEntityData;
     protected static final DataParameter<BlockPos> ORIGIN = EntityDataManager.createKey(EntityFallingBlock.class, DataSerializers.BLOCK_POS);
 
+    // ----- Carpet Start ----- //
+    private TrajectoryLogHelper logHelper = null;
+    
+    // [CM] Renewable Packed Ice - added new var
+    private int iceCount = 0;
+
+    /**
+     * Will get destroyed next tick.
+     */
+    @Override
+    public void remove() {
+        if (LoggerRegistry.__fallingBlocks && logHelper != null)
+            logHelper.onFinish();
+        super.remove();
+    }
+    //CM
+    @Override
+    public String cm_name() { return "Falling Block"; }
+
+    // ----- Carpet End ----- //
+
     public EntityFallingBlock(World worldIn)
     {
         super(EntityType.FALLING_BLOCK, worldIn);
@@ -63,6 +87,10 @@
         this.prevPosY = y;
         this.prevPosZ = z;
         this.setOrigin(new BlockPos(this));
+        //CM
+        this.iceCount = 0;
+        if (LoggerRegistry.__fallingBlocks)
+            logHelper = new TrajectoryLogHelper("fallingBlocks");
     }
 
     public boolean canBeAttackedWithItem()
@@ -98,6 +126,11 @@
 
     public void tick()
     {
+        // ----- Carpet Start ----- //
+        if (LoggerRegistry.__fallingBlocks && logHelper != null)
+            logHelper.onTick(posX, posY, posZ, motionX, motionY, motionZ);
+        // ----- Carpet End ----- //
+
         if (this.fallTile.isAir())
         {
             this.remove();
@@ -174,6 +207,25 @@
                     this.motionX *= (double)0.7F;
                     this.motionZ *= (double)0.7F;
                     this.motionY *= -0.5D;
+    
+                    // [CM] Renewable Packed Ice - added new logic
+                    if (block == Blocks.ANVIL &&
+                                CarpetSettings.getBool("renewablePackedIce") &&
+                                this.world.getBlockState(new BlockPos(this.posX, this.posY - 0.059999999776482582D, this.posZ)).getBlock()==Blocks.ICE  )
+                    {
+                        if (iceCount < 3)
+                        {
+                            world.destroyBlock(blockpos1.down(), false);
+                            this.onGround = false;
+                            iceCount++;
+                            return;
+                        }
+                        else
+                        {
+                            world.setBlockState(blockpos1.down(),Blocks.PACKED_ICE.getDefaultState(),3);
+                            world.playEvent(2001,blockpos1.down(),Block.getStateId(Blocks.PACKED_ICE.getDefaultState()));
+                        }
+                    }
 
                     if (iblockstate.getBlock() != Blocks.MOVING_PISTON)
                     {
